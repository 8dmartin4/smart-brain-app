{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\8dmar\\\\Documents\\\\ZTM\\\\FinalProjectFiles\\\\face-recognition-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'c478e87582be4bb68544b617c33b2f09'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3001/iamge', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box,\n      user\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: user.name,\n          entries: user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/8dmar/Documents/ZTM/FinalProjectFiles/face-recognition-brain/src/App.js"],"names":["React","Component","Clarifai","Navigation","SignIn","Register","Logo","Rank","ImageLinkForm","FaceRecognition","app","App","apiKey","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","catch","err","console","log","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Clarifai from 'clarifai';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport Logo from './components/Logo/Logo';\r\nimport Rank from './components/Rank/Rank';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport './App.css';\r\n\r\nconst app = new Clarifai.App ({\r\n  apiKey: 'c478e87582be4bb68544b617c33b2f09'\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: '',\r\n      imageUrl: '',\r\n      box: {},\r\n      route: 'signin',\r\n      isSignedIn: false,\r\n      user: {\r\n        id: '',\r\n        name: '',\r\n        email: '',\r\n        entries: 0,\r\n        joined: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({user: {\r\n      id: data.id,\r\n      name: data.name,\r\n      email: data.email,\r\n      entries: data.entries,\r\n      joined: data.joined\r\n    }})\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n    app.models\r\n    .predict(\r\n      Clarifai.FACE_DETECT_MODEL, \r\n      this.state.input)\r\n    .then(response => {\r\n      if(response) {\r\n        fetch('http://localhost:3001/iamge', {\r\n          method: 'put',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            id: this.state.user.id\r\n          })\r\n        })\r\n      }\r\n      this.displayFaceBox(this.calculateFaceLocation(response))\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if(route === 'signin') {\r\n      this.setState({isSignedIn: false})\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const {isSignedIn, imageUrl, route, box, user} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Navigation \r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}/>\r\n        {route === 'home'\r\n          ? <div>\r\n              <Logo />\r\n              <Rank name={user.name} entries={user.entries}/>\r\n              <ImageLinkForm \r\n                onInputChange={this.onInputChange} \r\n                onButtonSubmit={this.onButtonSubmit}/>\r\n              <FaceRecognition \r\n                box={box}\r\n                imageUrl={imageUrl}/>\r\n          </div>\r\n          : (\r\n            route === 'signin' \r\n            ? <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\r\n            : <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}